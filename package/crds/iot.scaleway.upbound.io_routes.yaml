---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: routes.iot.scaleway.upbound.io
spec:
  group: iot.scaleway.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - scaleway
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Route is the Schema for the Routes API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RouteSpec defines the desired state of Route
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  database:
                    description: Configuration block for the database routes. See  product
                      documentation for a better understanding of the parameters.
                      Database Route parameters
                    items:
                      properties:
                        dbname:
                          description: The database name (e.g. measurements). The
                            database name
                          type: string
                        host:
                          description: The database hostname. Can be an IP or a FQDN.
                            The database hostname
                          type: string
                        passwordSecretRef:
                          description: The database password. The database password
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        port:
                          description: The database port (e.g. 5432) The database
                            port
                          type: number
                        query:
                          description: The SQL query that will be executed when receiving
                            a message ($TOPIC and $PAYLOAD variables are available,
                            see documentation, e.g. INSERT INTO mytable(date, topic,
                            value) VALUES (NOW(), $TOPIC, $PAYLOAD)). SQL query to
                            be executed ($TOPIC and $PAYLOAD variables are available,
                            see documentation)
                          type: string
                        username:
                          description: The database username. The database username
                          type: string
                      required:
                      - passwordSecretRef
                      type: object
                    type: array
                  hubId:
                    description: The hub ID to which the Route will be attached to.
                      The ID of the route's hub
                    type: string
                  hubIdRef:
                    description: Reference to a Hub to populate hubId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  hubIdSelector:
                    description: Selector for a Hub to populate hubId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  name:
                    description: The name of the IoT Route you want to create (e.g.
                      my-route). The name of the route
                    type: string
                  region:
                    description: (Defaults to provider region) The region in which
                      the Route is attached to. The region you want to attach the
                      resource to
                    type: string
                  rest:
                    description: Configuration block for the rest routes. See product
                      documentation for a better understanding of the parameters.
                      Rest Route parameters
                    items:
                      properties:
                        headers:
                          additionalProperties:
                            type: string
                          description: a map of the extra headers to send with the
                            HTTP call (e.g. X-Header = Value). The HTTP call extra
                            headers
                          type: object
                        uri:
                          description: The URI of the Rest endpoint (e.g. https://internal.mycompany.com/ingest/mqttdata).
                            The URI of the REST endpoint
                          type: string
                        verb:
                          description: The HTTP Verb used to call Rest URI (e.g. post).
                            The HTTP Verb used to call REST URI
                          type: string
                      type: object
                    type: array
                  s3:
                    description: Configuration block for the S3 routes. See product
                      documentation for a better understanding of the parameters.
                      S3 Route parameters
                    items:
                      properties:
                        bucketName:
                          description: The name of the S3 route's destination bucket
                            (e.g. my-object-storage). The name of the S3 route's destination
                            bucket
                          type: string
                        bucketRegion:
                          description: The region of the S3 route's destination bucket
                            (e.g. fr-par). The region of the S3 route's destination
                            bucket
                          type: string
                        objectPrefix:
                          description: The string to prefix object names with (e.g.
                            mykeyprefix-). The string to prefix object names with
                          type: string
                        strategy:
                          description: 'How the S3 route''s objects will be created
                            (e.g. per_topic). See documentation for behaviour details.
                            How the S3 route''s objects will be created: one per topic
                            or one per message'
                          type: string
                      type: object
                    type: array
                  topic:
                    description: The topic the Route subscribes to, wildcards allowed
                      (e.g. thelab/+/temperature/#). The Topic the route subscribes
                      to (wildcards allowed)
                    type: string
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  database:
                    description: Configuration block for the database routes. See  product
                      documentation for a better understanding of the parameters.
                      Database Route parameters
                    items:
                      properties:
                        dbname:
                          description: The database name (e.g. measurements). The
                            database name
                          type: string
                        host:
                          description: The database hostname. Can be an IP or a FQDN.
                            The database hostname
                          type: string
                        port:
                          description: The database port (e.g. 5432) The database
                            port
                          type: number
                        query:
                          description: The SQL query that will be executed when receiving
                            a message ($TOPIC and $PAYLOAD variables are available,
                            see documentation, e.g. INSERT INTO mytable(date, topic,
                            value) VALUES (NOW(), $TOPIC, $PAYLOAD)). SQL query to
                            be executed ($TOPIC and $PAYLOAD variables are available,
                            see documentation)
                          type: string
                        username:
                          description: The database username. The database username
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the IoT Route you want to create (e.g.
                      my-route). The name of the route
                    type: string
                  region:
                    description: (Defaults to provider region) The region in which
                      the Route is attached to. The region you want to attach the
                      resource to
                    type: string
                  rest:
                    description: Configuration block for the rest routes. See product
                      documentation for a better understanding of the parameters.
                      Rest Route parameters
                    items:
                      properties:
                        headers:
                          additionalProperties:
                            type: string
                          description: a map of the extra headers to send with the
                            HTTP call (e.g. X-Header = Value). The HTTP call extra
                            headers
                          type: object
                        uri:
                          description: The URI of the Rest endpoint (e.g. https://internal.mycompany.com/ingest/mqttdata).
                            The URI of the REST endpoint
                          type: string
                        verb:
                          description: The HTTP Verb used to call Rest URI (e.g. post).
                            The HTTP Verb used to call REST URI
                          type: string
                      type: object
                    type: array
                  s3:
                    description: Configuration block for the S3 routes. See product
                      documentation for a better understanding of the parameters.
                      S3 Route parameters
                    items:
                      properties:
                        bucketName:
                          description: The name of the S3 route's destination bucket
                            (e.g. my-object-storage). The name of the S3 route's destination
                            bucket
                          type: string
                        bucketRegion:
                          description: The region of the S3 route's destination bucket
                            (e.g. fr-par). The region of the S3 route's destination
                            bucket
                          type: string
                        objectPrefix:
                          description: The string to prefix object names with (e.g.
                            mykeyprefix-). The string to prefix object names with
                          type: string
                        strategy:
                          description: 'How the S3 route''s objects will be created
                            (e.g. per_topic). See documentation for behaviour details.
                            How the S3 route''s objects will be created: one per topic
                            or one per message'
                          type: string
                      type: object
                    type: array
                  topic:
                    description: The topic the Route subscribes to, wildcards allowed
                      (e.g. thelab/+/temperature/#). The Topic the route subscribes
                      to (wildcards allowed)
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.topic is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.topic)
                || (has(self.initProvider) && has(self.initProvider.topic))'
          status:
            description: RouteStatus defines the observed state of Route.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: The date and time the Route was created. The date
                      and time of the creation of the IoT Route
                    type: string
                  database:
                    description: Configuration block for the database routes. See  product
                      documentation for a better understanding of the parameters.
                      Database Route parameters
                    items:
                      properties:
                        dbname:
                          description: The database name (e.g. measurements). The
                            database name
                          type: string
                        host:
                          description: The database hostname. Can be an IP or a FQDN.
                            The database hostname
                          type: string
                        port:
                          description: The database port (e.g. 5432) The database
                            port
                          type: number
                        query:
                          description: The SQL query that will be executed when receiving
                            a message ($TOPIC and $PAYLOAD variables are available,
                            see documentation, e.g. INSERT INTO mytable(date, topic,
                            value) VALUES (NOW(), $TOPIC, $PAYLOAD)). SQL query to
                            be executed ($TOPIC and $PAYLOAD variables are available,
                            see documentation)
                          type: string
                        username:
                          description: The database username. The database username
                          type: string
                      type: object
                    type: array
                  hubId:
                    description: The hub ID to which the Route will be attached to.
                      The ID of the route's hub
                    type: string
                  id:
                    description: The ID of the Route.
                    type: string
                  name:
                    description: The name of the IoT Route you want to create (e.g.
                      my-route). The name of the route
                    type: string
                  region:
                    description: (Defaults to provider region) The region in which
                      the Route is attached to. The region you want to attach the
                      resource to
                    type: string
                  rest:
                    description: Configuration block for the rest routes. See product
                      documentation for a better understanding of the parameters.
                      Rest Route parameters
                    items:
                      properties:
                        headers:
                          additionalProperties:
                            type: string
                          description: a map of the extra headers to send with the
                            HTTP call (e.g. X-Header = Value). The HTTP call extra
                            headers
                          type: object
                        uri:
                          description: The URI of the Rest endpoint (e.g. https://internal.mycompany.com/ingest/mqttdata).
                            The URI of the REST endpoint
                          type: string
                        verb:
                          description: The HTTP Verb used to call Rest URI (e.g. post).
                            The HTTP Verb used to call REST URI
                          type: string
                      type: object
                    type: array
                  s3:
                    description: Configuration block for the S3 routes. See product
                      documentation for a better understanding of the parameters.
                      S3 Route parameters
                    items:
                      properties:
                        bucketName:
                          description: The name of the S3 route's destination bucket
                            (e.g. my-object-storage). The name of the S3 route's destination
                            bucket
                          type: string
                        bucketRegion:
                          description: The region of the S3 route's destination bucket
                            (e.g. fr-par). The region of the S3 route's destination
                            bucket
                          type: string
                        objectPrefix:
                          description: The string to prefix object names with (e.g.
                            mykeyprefix-). The string to prefix object names with
                          type: string
                        strategy:
                          description: 'How the S3 route''s objects will be created
                            (e.g. per_topic). See documentation for behaviour details.
                            How the S3 route''s objects will be created: one per topic
                            or one per message'
                          type: string
                      type: object
                    type: array
                  topic:
                    description: The topic the Route subscribes to, wildcards allowed
                      (e.g. thelab/+/temperature/#). The Topic the route subscribes
                      to (wildcards allowed)
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
