---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clusters.k8s.scaleway.upbound.io
spec:
  group: k8s.scaleway.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - scaleway
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the Clusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  admissionPlugins:
                    description: The list of admission plugins to enable on the cluster.
                      The list of admission plugins to enable on the cluster
                    items:
                      type: string
                    type: array
                  apiserverCertSans:
                    description: Additional Subject Alternative Names for the Kubernetes
                      API server certificate Additional Subject Alternative Names
                      for the Kubernetes API server certificate
                    items:
                      type: string
                    type: array
                  autoUpgrade:
                    description: The auto upgrade configuration. The auto upgrade
                      configuration for the cluster
                    items:
                      properties:
                        enable:
                          description: 'Set to true to enable Kubernetes patch version
                            auto upgrades. ~> Important: When enabling auto upgrades,
                            the version field take a minor version like x.y (ie 1.18).
                            Enables the Kubernetes patch version auto upgrade'
                          type: boolean
                        maintenanceWindowDay:
                          description: The day of the auto upgrade maintenance window
                            (monday to sunday, or any). Day of the maintenance window
                          type: string
                        maintenanceWindowStartHour:
                          description: The start hour (UTC) of the 2-hour auto upgrade
                            maintenance window (0 to 23). Start hour of the 2-hour
                            maintenance window
                          type: number
                      type: object
                    type: array
                  autoscalerConfig:
                    description: The configuration options for the Kubernetes cluster
                      autoscaler. The autoscaler configuration for the cluster
                    items:
                      properties:
                        balanceSimilarNodeGroups:
                          description: (Defaults to false) Detect similar node groups
                            and balance the number of nodes between them. Detect similar
                            node groups and balance the number of nodes between them
                          type: boolean
                        disableScaleDown:
                          description: (Defaults to false) Disables the scale down
                            feature of the autoscaler. Disable the scale down feature
                            of the autoscaler
                          type: boolean
                        estimator:
                          description: (Defaults to binpacking) Type of resource estimator
                            to be used in scale up. Type of resource estimator to
                            be used in scale up
                          type: string
                        expander:
                          description: (Default to random) Type of node group expander
                            to be used in scale up. Type of node group expander to
                            be used in scale up
                          type: string
                        expendablePodsPriorityCutoff:
                          description: (Defaults to -10) Pods with priority below
                            cutoff will be expendable. They can be killed without
                            any consideration during scale down and they don't cause
                            scale up. Pods with null priority (PodPriority disabled)
                            are non expendable. Pods with priority below cutoff will
                            be expendable. They can be killed without any consideration
                            during scale down and they don't cause scale up. Pods
                            with null priority (PodPriority disabled) are non expendable
                          type: number
                        ignoreDaemonsetsUtilization:
                          description: (Defaults to false) Ignore DaemonSet pods when
                            calculating resource utilization for scaling down. Ignore
                            DaemonSet pods when calculating resource utilization for
                            scaling down
                          type: boolean
                        maxGracefulTerminationSec:
                          description: (Defaults to 600) Maximum number of seconds
                            the cluster autoscaler waits for pod termination when
                            trying to scale down a node Maximum number of seconds
                            the cluster autoscaler waits for pod termination when
                            trying to scale down a node
                          type: number
                        scaleDownDelayAfterAdd:
                          description: (Defaults to 10m) How long after scale up that
                            scale down evaluation resumes. How long after scale up
                            that scale down evaluation resumes
                          type: string
                        scaleDownUnneededTime:
                          description: (Default to 10m) How long a node should be
                            unneeded before it is eligible for scale down. How long
                            a node should be unneeded before it is eligible for scale
                            down
                          type: string
                        scaleDownUtilizationThreshold:
                          description: (Defaults to 0.5) Node utilization level, defined
                            as sum of requested resources divided by capacity, below
                            which a node can be considered for scale down Node utilization
                            level, defined as sum of requested resources divided by
                            capacity, below which a node can be considered for scale
                            down
                          type: number
                      type: object
                    type: array
                  cni:
                    description: 'The Container Network Interface (CNI) for the Kubernetes
                      cluster. ~> Important: Updates to this field will recreate a
                      new resource. The CNI plugin of the cluster'
                    type: string
                  deleteAdditionalResources:
                    description: 'Delete additional resources like block volumes,
                      loadbalancers and the cluster private network (if empty) that
                      were created in Kubernetes on cluster deletion. ~> Important:
                      Setting this field to true means that you will lose all your
                      cluster data and network configuration when you delete your
                      cluster. If you prefer keeping it, you should instead set it
                      as false. Delete additional resources like block volumes and
                      loadbalancers on cluster deletion'
                    type: boolean
                  description:
                    description: A description for the Kubernetes cluster. The description
                      of the cluster
                    type: string
                  featureGates:
                    description: The list of feature gates to enable on the cluster.
                      The list of feature gates to enable on the cluster
                    items:
                      type: string
                    type: array
                  name:
                    description: The name for the Kubernetes cluster. The name of
                      the cluster
                    type: string
                  openIdConnectConfig:
                    description: The OpenID Connect configuration of the cluster The
                      OpenID Connect configuration of the cluster
                    items:
                      properties:
                        clientId:
                          description: A client id that all tokens must be issued
                            for A client id that all tokens must be issued for
                          type: string
                        groupsClaim:
                          description: JWT claim to use as the user's group JWT claim
                            to use as the user's group
                          items:
                            type: string
                          type: array
                        groupsPrefix:
                          description: Prefix prepended to group claims Prefix prepended
                            to group claims
                          type: string
                        issuerUrl:
                          description: URL of the provider which allows the API server
                            to discover public signing keys URL of the provider which
                            allows the API server to discover public signing keys
                          type: string
                        requiredClaim:
                          description: Multiple key=value pairs that describes a required
                            claim in the ID Token Multiple key=value pairs that describes
                            a required claim in the ID Token
                          items:
                            type: string
                          type: array
                        usernameClaim:
                          description: JWT claim to use as the user name JWT claim
                            to use as the user name
                          type: string
                        usernamePrefix:
                          description: Prefix prepended to username Prefix prepended
                            to username
                          type: string
                      type: object
                    type: array
                  privateNetworkId:
                    description: The ID of the private network of the cluster. The
                      ID of the cluster's private network
                    type: string
                  privateNetworkIdRef:
                    description: Reference to a PrivateNetwork in vpc to populate
                      privateNetworkId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  privateNetworkIdSelector:
                    description: Selector for a PrivateNetwork in vpc to populate
                      privateNetworkId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  projectId:
                    description: (Defaults to provider project_id) The ID of the project
                      the cluster is associated with. The project_id you want to attach
                      the resource to
                    type: string
                  region:
                    description: (Defaults to provider region) The region in which
                      the cluster should be created. The region you want to attach
                      the resource to
                    type: string
                  tags:
                    description: The tags associated with the Kubernetes cluster.
                      The tags associated with the cluster
                    items:
                      type: string
                    type: array
                  type:
                    description: 'The type of Kubernetes cluster. Possible values
                      are: The type of cluster'
                    type: string
                  version:
                    description: The version of the Kubernetes cluster. The version
                      of the cluster
                    type: string
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  admissionPlugins:
                    description: The list of admission plugins to enable on the cluster.
                      The list of admission plugins to enable on the cluster
                    items:
                      type: string
                    type: array
                  apiserverCertSans:
                    description: Additional Subject Alternative Names for the Kubernetes
                      API server certificate Additional Subject Alternative Names
                      for the Kubernetes API server certificate
                    items:
                      type: string
                    type: array
                  autoUpgrade:
                    description: The auto upgrade configuration. The auto upgrade
                      configuration for the cluster
                    items:
                      properties:
                        enable:
                          description: 'Set to true to enable Kubernetes patch version
                            auto upgrades. ~> Important: When enabling auto upgrades,
                            the version field take a minor version like x.y (ie 1.18).
                            Enables the Kubernetes patch version auto upgrade'
                          type: boolean
                        maintenanceWindowDay:
                          description: The day of the auto upgrade maintenance window
                            (monday to sunday, or any). Day of the maintenance window
                          type: string
                        maintenanceWindowStartHour:
                          description: The start hour (UTC) of the 2-hour auto upgrade
                            maintenance window (0 to 23). Start hour of the 2-hour
                            maintenance window
                          type: number
                      type: object
                    type: array
                  autoscalerConfig:
                    description: The configuration options for the Kubernetes cluster
                      autoscaler. The autoscaler configuration for the cluster
                    items:
                      properties:
                        balanceSimilarNodeGroups:
                          description: (Defaults to false) Detect similar node groups
                            and balance the number of nodes between them. Detect similar
                            node groups and balance the number of nodes between them
                          type: boolean
                        disableScaleDown:
                          description: (Defaults to false) Disables the scale down
                            feature of the autoscaler. Disable the scale down feature
                            of the autoscaler
                          type: boolean
                        estimator:
                          description: (Defaults to binpacking) Type of resource estimator
                            to be used in scale up. Type of resource estimator to
                            be used in scale up
                          type: string
                        expander:
                          description: (Default to random) Type of node group expander
                            to be used in scale up. Type of node group expander to
                            be used in scale up
                          type: string
                        expendablePodsPriorityCutoff:
                          description: (Defaults to -10) Pods with priority below
                            cutoff will be expendable. They can be killed without
                            any consideration during scale down and they don't cause
                            scale up. Pods with null priority (PodPriority disabled)
                            are non expendable. Pods with priority below cutoff will
                            be expendable. They can be killed without any consideration
                            during scale down and they don't cause scale up. Pods
                            with null priority (PodPriority disabled) are non expendable
                          type: number
                        ignoreDaemonsetsUtilization:
                          description: (Defaults to false) Ignore DaemonSet pods when
                            calculating resource utilization for scaling down. Ignore
                            DaemonSet pods when calculating resource utilization for
                            scaling down
                          type: boolean
                        maxGracefulTerminationSec:
                          description: (Defaults to 600) Maximum number of seconds
                            the cluster autoscaler waits for pod termination when
                            trying to scale down a node Maximum number of seconds
                            the cluster autoscaler waits for pod termination when
                            trying to scale down a node
                          type: number
                        scaleDownDelayAfterAdd:
                          description: (Defaults to 10m) How long after scale up that
                            scale down evaluation resumes. How long after scale up
                            that scale down evaluation resumes
                          type: string
                        scaleDownUnneededTime:
                          description: (Default to 10m) How long a node should be
                            unneeded before it is eligible for scale down. How long
                            a node should be unneeded before it is eligible for scale
                            down
                          type: string
                        scaleDownUtilizationThreshold:
                          description: (Defaults to 0.5) Node utilization level, defined
                            as sum of requested resources divided by capacity, below
                            which a node can be considered for scale down Node utilization
                            level, defined as sum of requested resources divided by
                            capacity, below which a node can be considered for scale
                            down
                          type: number
                      type: object
                    type: array
                  cni:
                    description: 'The Container Network Interface (CNI) for the Kubernetes
                      cluster. ~> Important: Updates to this field will recreate a
                      new resource. The CNI plugin of the cluster'
                    type: string
                  deleteAdditionalResources:
                    description: 'Delete additional resources like block volumes,
                      loadbalancers and the cluster private network (if empty) that
                      were created in Kubernetes on cluster deletion. ~> Important:
                      Setting this field to true means that you will lose all your
                      cluster data and network configuration when you delete your
                      cluster. If you prefer keeping it, you should instead set it
                      as false. Delete additional resources like block volumes and
                      loadbalancers on cluster deletion'
                    type: boolean
                  description:
                    description: A description for the Kubernetes cluster. The description
                      of the cluster
                    type: string
                  featureGates:
                    description: The list of feature gates to enable on the cluster.
                      The list of feature gates to enable on the cluster
                    items:
                      type: string
                    type: array
                  name:
                    description: The name for the Kubernetes cluster. The name of
                      the cluster
                    type: string
                  openIdConnectConfig:
                    description: The OpenID Connect configuration of the cluster The
                      OpenID Connect configuration of the cluster
                    items:
                      properties:
                        clientId:
                          description: A client id that all tokens must be issued
                            for A client id that all tokens must be issued for
                          type: string
                        groupsClaim:
                          description: JWT claim to use as the user's group JWT claim
                            to use as the user's group
                          items:
                            type: string
                          type: array
                        groupsPrefix:
                          description: Prefix prepended to group claims Prefix prepended
                            to group claims
                          type: string
                        issuerUrl:
                          description: URL of the provider which allows the API server
                            to discover public signing keys URL of the provider which
                            allows the API server to discover public signing keys
                          type: string
                        requiredClaim:
                          description: Multiple key=value pairs that describes a required
                            claim in the ID Token Multiple key=value pairs that describes
                            a required claim in the ID Token
                          items:
                            type: string
                          type: array
                        usernameClaim:
                          description: JWT claim to use as the user name JWT claim
                            to use as the user name
                          type: string
                        usernamePrefix:
                          description: Prefix prepended to username Prefix prepended
                            to username
                          type: string
                      type: object
                    type: array
                  projectId:
                    description: (Defaults to provider project_id) The ID of the project
                      the cluster is associated with. The project_id you want to attach
                      the resource to
                    type: string
                  region:
                    description: (Defaults to provider region) The region in which
                      the cluster should be created. The region you want to attach
                      the resource to
                    type: string
                  tags:
                    description: The tags associated with the Kubernetes cluster.
                      The tags associated with the cluster
                    items:
                      type: string
                    type: array
                  type:
                    description: 'The type of Kubernetes cluster. Possible values
                      are: The type of cluster'
                    type: string
                  version:
                    description: The version of the Kubernetes cluster. The version
                      of the cluster
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.cni is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.cni)
                || (has(self.initProvider) && has(self.initProvider.cni))'
            - message: spec.forProvider.deleteAdditionalResources is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.deleteAdditionalResources)
                || (has(self.initProvider) && has(self.initProvider.deleteAdditionalResources))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.version is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.version)
                || (has(self.initProvider) && has(self.initProvider.version))'
          status:
            description: ClusterStatus defines the observed state of Cluster.
            properties:
              atProvider:
                properties:
                  admissionPlugins:
                    description: The list of admission plugins to enable on the cluster.
                      The list of admission plugins to enable on the cluster
                    items:
                      type: string
                    type: array
                  apiserverCertSans:
                    description: Additional Subject Alternative Names for the Kubernetes
                      API server certificate Additional Subject Alternative Names
                      for the Kubernetes API server certificate
                    items:
                      type: string
                    type: array
                  apiserverUrl:
                    description: The URL of the Kubernetes API server. Kubernetes
                      API server URL
                    type: string
                  autoUpgrade:
                    description: The auto upgrade configuration. The auto upgrade
                      configuration for the cluster
                    items:
                      properties:
                        enable:
                          description: 'Set to true to enable Kubernetes patch version
                            auto upgrades. ~> Important: When enabling auto upgrades,
                            the version field take a minor version like x.y (ie 1.18).
                            Enables the Kubernetes patch version auto upgrade'
                          type: boolean
                        maintenanceWindowDay:
                          description: The day of the auto upgrade maintenance window
                            (monday to sunday, or any). Day of the maintenance window
                          type: string
                        maintenanceWindowStartHour:
                          description: The start hour (UTC) of the 2-hour auto upgrade
                            maintenance window (0 to 23). Start hour of the 2-hour
                            maintenance window
                          type: number
                      type: object
                    type: array
                  autoscalerConfig:
                    description: The configuration options for the Kubernetes cluster
                      autoscaler. The autoscaler configuration for the cluster
                    items:
                      properties:
                        balanceSimilarNodeGroups:
                          description: (Defaults to false) Detect similar node groups
                            and balance the number of nodes between them. Detect similar
                            node groups and balance the number of nodes between them
                          type: boolean
                        disableScaleDown:
                          description: (Defaults to false) Disables the scale down
                            feature of the autoscaler. Disable the scale down feature
                            of the autoscaler
                          type: boolean
                        estimator:
                          description: (Defaults to binpacking) Type of resource estimator
                            to be used in scale up. Type of resource estimator to
                            be used in scale up
                          type: string
                        expander:
                          description: (Default to random) Type of node group expander
                            to be used in scale up. Type of node group expander to
                            be used in scale up
                          type: string
                        expendablePodsPriorityCutoff:
                          description: (Defaults to -10) Pods with priority below
                            cutoff will be expendable. They can be killed without
                            any consideration during scale down and they don't cause
                            scale up. Pods with null priority (PodPriority disabled)
                            are non expendable. Pods with priority below cutoff will
                            be expendable. They can be killed without any consideration
                            during scale down and they don't cause scale up. Pods
                            with null priority (PodPriority disabled) are non expendable
                          type: number
                        ignoreDaemonsetsUtilization:
                          description: (Defaults to false) Ignore DaemonSet pods when
                            calculating resource utilization for scaling down. Ignore
                            DaemonSet pods when calculating resource utilization for
                            scaling down
                          type: boolean
                        maxGracefulTerminationSec:
                          description: (Defaults to 600) Maximum number of seconds
                            the cluster autoscaler waits for pod termination when
                            trying to scale down a node Maximum number of seconds
                            the cluster autoscaler waits for pod termination when
                            trying to scale down a node
                          type: number
                        scaleDownDelayAfterAdd:
                          description: (Defaults to 10m) How long after scale up that
                            scale down evaluation resumes. How long after scale up
                            that scale down evaluation resumes
                          type: string
                        scaleDownUnneededTime:
                          description: (Default to 10m) How long a node should be
                            unneeded before it is eligible for scale down. How long
                            a node should be unneeded before it is eligible for scale
                            down
                          type: string
                        scaleDownUtilizationThreshold:
                          description: (Defaults to 0.5) Node utilization level, defined
                            as sum of requested resources divided by capacity, below
                            which a node can be considered for scale down Node utilization
                            level, defined as sum of requested resources divided by
                            capacity, below which a node can be considered for scale
                            down
                          type: number
                      type: object
                    type: array
                  cni:
                    description: 'The Container Network Interface (CNI) for the Kubernetes
                      cluster. ~> Important: Updates to this field will recreate a
                      new resource. The CNI plugin of the cluster'
                    type: string
                  createdAt:
                    description: The creation date of the cluster. The date and time
                      of the creation of the Kubernetes cluster
                    type: string
                  deleteAdditionalResources:
                    description: 'Delete additional resources like block volumes,
                      loadbalancers and the cluster private network (if empty) that
                      were created in Kubernetes on cluster deletion. ~> Important:
                      Setting this field to true means that you will lose all your
                      cluster data and network configuration when you delete your
                      cluster. If you prefer keeping it, you should instead set it
                      as false. Delete additional resources like block volumes and
                      loadbalancers on cluster deletion'
                    type: boolean
                  description:
                    description: A description for the Kubernetes cluster. The description
                      of the cluster
                    type: string
                  featureGates:
                    description: The list of feature gates to enable on the cluster.
                      The list of feature gates to enable on the cluster
                    items:
                      type: string
                    type: array
                  id:
                    description: The ID of the cluster.
                    type: string
                  name:
                    description: The name for the Kubernetes cluster. The name of
                      the cluster
                    type: string
                  openIdConnectConfig:
                    description: The OpenID Connect configuration of the cluster The
                      OpenID Connect configuration of the cluster
                    items:
                      properties:
                        clientId:
                          description: A client id that all tokens must be issued
                            for A client id that all tokens must be issued for
                          type: string
                        groupsClaim:
                          description: JWT claim to use as the user's group JWT claim
                            to use as the user's group
                          items:
                            type: string
                          type: array
                        groupsPrefix:
                          description: Prefix prepended to group claims Prefix prepended
                            to group claims
                          type: string
                        issuerUrl:
                          description: URL of the provider which allows the API server
                            to discover public signing keys URL of the provider which
                            allows the API server to discover public signing keys
                          type: string
                        requiredClaim:
                          description: Multiple key=value pairs that describes a required
                            claim in the ID Token Multiple key=value pairs that describes
                            a required claim in the ID Token
                          items:
                            type: string
                          type: array
                        usernameClaim:
                          description: JWT claim to use as the user name JWT claim
                            to use as the user name
                          type: string
                        usernamePrefix:
                          description: Prefix prepended to username Prefix prepended
                            to username
                          type: string
                      type: object
                    type: array
                  organizationId:
                    description: The organization ID the cluster is associated with.
                      The organization_id you want to attach the resource to
                    type: string
                  privateNetworkId:
                    description: The ID of the private network of the cluster. The
                      ID of the cluster's private network
                    type: string
                  projectId:
                    description: (Defaults to provider project_id) The ID of the project
                      the cluster is associated with. The project_id you want to attach
                      the resource to
                    type: string
                  region:
                    description: (Defaults to provider region) The region in which
                      the cluster should be created. The region you want to attach
                      the resource to
                    type: string
                  status:
                    description: The status of the Kubernetes cluster. The status
                      of the cluster
                    type: string
                  tags:
                    description: The tags associated with the Kubernetes cluster.
                      The tags associated with the cluster
                    items:
                      type: string
                    type: array
                  type:
                    description: 'The type of Kubernetes cluster. Possible values
                      are: The type of cluster'
                    type: string
                  updatedAt:
                    description: The last update date of the cluster. The date and
                      time of the last update of the Kubernetes cluster
                    type: string
                  upgradeAvailable:
                    description: Set to true if a newer Kubernetes version is available.
                      True if an upgrade is available
                    type: boolean
                  version:
                    description: The version of the Kubernetes cluster. The version
                      of the cluster
                    type: string
                  wildcardDns:
                    description: The DNS wildcard that points to all ready nodes.
                      Wildcard DNS pointing to all the ready nodes
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
