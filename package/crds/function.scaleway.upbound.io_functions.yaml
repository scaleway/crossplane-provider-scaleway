---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: functions.function.scaleway.upbound.io
spec:
  group: function.scaleway.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - scaleway
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Function is the Schema for the Functions API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  deploy:
                    description: define if the function should be deployed, Upbound
                      official provider will wait for function to be deployed. function
                      will get deployed if you change source zip define if the function
                      should be deployed, Upbound official provider will wait for
                      function to be deployed
                    type: boolean
                  description:
                    description: The description of the function. The description
                      of the function
                    type: string
                  environmentVariables:
                    additionalProperties:
                      type: string
                    description: The environment variables of the function. The environment
                      variables of the function
                    type: object
                  handler:
                    description: Handler of the function. Depends on the runtime (function
                      guide) Handler of the function. Depends on the runtime https://developers.scaleway.com/en/products/functions/api/#create-a-function
                    type: string
                  httpOption:
                    description: HTTP traffic configuration
                    type: string
                  maxScale:
                    description: Maximum replicas for your function (defaults to 20),
                      our system will scale your functions automatically based on
                      incoming workload, but will never scale the number of replicas
                      above the configured max_scale. Maximum replicas for your function
                      (defaults to 20), our system will scale your functions automatically
                      based on incoming workload, but will never scale the number
                      of replicas above the configured max_scale.
                    type: number
                  memoryLimit:
                    description: Memory limit in MB for your function, defaults to
                      128MB Memory limit in MB for your function, defaults to 128MB
                    type: number
                  minScale:
                    description: Minimum replicas for your function, defaults to 0,
                      Note that a function is billed when it gets executed, and using
                      a min_scale greater than 0 will cause your function container
                      to run constantly. Minimum replicas for your function, defaults
                      to 0, Note that a function is billed when it gets executed,
                      and using a min_scale greater than 0 will cause your function
                      to run all the time.
                    type: number
                  name:
                    description: The unique name of the function. The name of the
                      function
                    type: string
                  namespaceId:
                    description: The ID of the function The namespace ID associated
                      with this function
                    type: string
                  namespaceIdRef:
                    description: Reference to a FunctionNamespace to populate namespaceId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  namespaceIdSelector:
                    description: Selector for a FunctionNamespace to populate namespaceId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  privacy:
                    description: Privacy of the function. Can be either private or
                      public. Read more on authentication Privacy of the function.
                      Can be either `private` or `public`
                    type: string
                  projectId:
                    description: (Defaults to provider project_id) The ID of the project
                      the namespace is associated with. The project_id you want to
                      attach the resource to
                    type: string
                  region:
                    description: (Defaults to provider region). The region in which
                      the namespace should be created. The region you want to attach
                      the resource to
                    type: string
                  runtime:
                    description: Runtime of the function. Runtimes can be fetched
                      using specific route Runtime of the function
                    type: string
                  secretEnvironmentVariablesSecretRef:
                    description: The secret environment variables of the function.
                      The secret environment variables to be injected into your function
                      at runtime.
                    properties:
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  timeout:
                    description: Holds the max duration (in seconds) the function
                      is allowed for responding to a request Holds the max duration
                      (in seconds) the function is allowed for responding to a request
                    type: number
                  zipFile:
                    description: Location of the zip file to upload containing your
                      function sources Location of the zip file to upload containing
                      your function sources
                    type: string
                  zipHash:
                    description: The hash of your source zip file, changing it will
                      re-apply function. Can be any string, changing it will just
                      trigger state change. Can be any string
                    type: string
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  deploy:
                    description: define if the function should be deployed, Upbound
                      official provider will wait for function to be deployed. function
                      will get deployed if you change source zip define if the function
                      should be deployed, Upbound official provider will wait for
                      function to be deployed
                    type: boolean
                  description:
                    description: The description of the function. The description
                      of the function
                    type: string
                  environmentVariables:
                    additionalProperties:
                      type: string
                    description: The environment variables of the function. The environment
                      variables of the function
                    type: object
                  handler:
                    description: Handler of the function. Depends on the runtime (function
                      guide) Handler of the function. Depends on the runtime https://developers.scaleway.com/en/products/functions/api/#create-a-function
                    type: string
                  httpOption:
                    description: HTTP traffic configuration
                    type: string
                  maxScale:
                    description: Maximum replicas for your function (defaults to 20),
                      our system will scale your functions automatically based on
                      incoming workload, but will never scale the number of replicas
                      above the configured max_scale. Maximum replicas for your function
                      (defaults to 20), our system will scale your functions automatically
                      based on incoming workload, but will never scale the number
                      of replicas above the configured max_scale.
                    type: number
                  memoryLimit:
                    description: Memory limit in MB for your function, defaults to
                      128MB Memory limit in MB for your function, defaults to 128MB
                    type: number
                  minScale:
                    description: Minimum replicas for your function, defaults to 0,
                      Note that a function is billed when it gets executed, and using
                      a min_scale greater than 0 will cause your function container
                      to run constantly. Minimum replicas for your function, defaults
                      to 0, Note that a function is billed when it gets executed,
                      and using a min_scale greater than 0 will cause your function
                      to run all the time.
                    type: number
                  name:
                    description: The unique name of the function. The name of the
                      function
                    type: string
                  privacy:
                    description: Privacy of the function. Can be either private or
                      public. Read more on authentication Privacy of the function.
                      Can be either `private` or `public`
                    type: string
                  projectId:
                    description: (Defaults to provider project_id) The ID of the project
                      the namespace is associated with. The project_id you want to
                      attach the resource to
                    type: string
                  region:
                    description: (Defaults to provider region). The region in which
                      the namespace should be created. The region you want to attach
                      the resource to
                    type: string
                  runtime:
                    description: Runtime of the function. Runtimes can be fetched
                      using specific route Runtime of the function
                    type: string
                  timeout:
                    description: Holds the max duration (in seconds) the function
                      is allowed for responding to a request Holds the max duration
                      (in seconds) the function is allowed for responding to a request
                    type: number
                  zipFile:
                    description: Location of the zip file to upload containing your
                      function sources Location of the zip file to upload containing
                      your function sources
                    type: string
                  zipHash:
                    description: The hash of your source zip file, changing it will
                      re-apply function. Can be any string, changing it will just
                      trigger state change. Can be any string
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.handler is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.handler)
                || (has(self.initProvider) && has(self.initProvider.handler))'
            - message: spec.forProvider.privacy is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.privacy)
                || (has(self.initProvider) && has(self.initProvider.privacy))'
            - message: spec.forProvider.runtime is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.runtime)
                || (has(self.initProvider) && has(self.initProvider.runtime))'
          status:
            description: FunctionStatus defines the observed state of Function.
            properties:
              atProvider:
                properties:
                  cpuLimit:
                    description: The CPU limit in mCPU for your function. More infos
                      on resources here CPU limit in mCPU for your function
                    type: number
                  deploy:
                    description: define if the function should be deployed, Upbound
                      official provider will wait for function to be deployed. function
                      will get deployed if you change source zip define if the function
                      should be deployed, Upbound official provider will wait for
                      function to be deployed
                    type: boolean
                  description:
                    description: The description of the function. The description
                      of the function
                    type: string
                  domainName:
                    description: The native domain name of the function The native
                      function domain name.
                    type: string
                  environmentVariables:
                    additionalProperties:
                      type: string
                    description: The environment variables of the function. The environment
                      variables of the function
                    type: object
                  handler:
                    description: Handler of the function. Depends on the runtime (function
                      guide) Handler of the function. Depends on the runtime https://developers.scaleway.com/en/products/functions/api/#create-a-function
                    type: string
                  httpOption:
                    description: HTTP traffic configuration
                    type: string
                  id:
                    description: The ID of the function
                    type: string
                  maxScale:
                    description: Maximum replicas for your function (defaults to 20),
                      our system will scale your functions automatically based on
                      incoming workload, but will never scale the number of replicas
                      above the configured max_scale. Maximum replicas for your function
                      (defaults to 20), our system will scale your functions automatically
                      based on incoming workload, but will never scale the number
                      of replicas above the configured max_scale.
                    type: number
                  memoryLimit:
                    description: Memory limit in MB for your function, defaults to
                      128MB Memory limit in MB for your function, defaults to 128MB
                    type: number
                  minScale:
                    description: Minimum replicas for your function, defaults to 0,
                      Note that a function is billed when it gets executed, and using
                      a min_scale greater than 0 will cause your function container
                      to run constantly. Minimum replicas for your function, defaults
                      to 0, Note that a function is billed when it gets executed,
                      and using a min_scale greater than 0 will cause your function
                      to run all the time.
                    type: number
                  name:
                    description: The unique name of the function. The name of the
                      function
                    type: string
                  namespaceId:
                    description: The ID of the function The namespace ID associated
                      with this function
                    type: string
                  organizationId:
                    description: The organization ID the function is associated with.
                      The organization_id you want to attach the resource to
                    type: string
                  privacy:
                    description: Privacy of the function. Can be either private or
                      public. Read more on authentication Privacy of the function.
                      Can be either `private` or `public`
                    type: string
                  projectId:
                    description: (Defaults to provider project_id) The ID of the project
                      the namespace is associated with. The project_id you want to
                      attach the resource to
                    type: string
                  region:
                    description: (Defaults to provider region). The region in which
                      the namespace should be created. The region you want to attach
                      the resource to
                    type: string
                  runtime:
                    description: Runtime of the function. Runtimes can be fetched
                      using specific route Runtime of the function
                    type: string
                  timeout:
                    description: Holds the max duration (in seconds) the function
                      is allowed for responding to a request Holds the max duration
                      (in seconds) the function is allowed for responding to a request
                    type: number
                  zipFile:
                    description: Location of the zip file to upload containing your
                      function sources Location of the zip file to upload containing
                      your function sources
                    type: string
                  zipHash:
                    description: The hash of your source zip file, changing it will
                      re-apply function. Can be any string, changing it will just
                      trigger state change. Can be any string
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
