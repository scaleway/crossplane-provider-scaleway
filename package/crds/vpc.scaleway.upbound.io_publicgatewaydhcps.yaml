---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: publicgatewaydhcps.vpc.scaleway.upbound.io
spec:
  group: vpc.scaleway.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - scaleway
    kind: PublicGatewayDHCP
    listKind: PublicGatewayDHCPList
    plural: publicgatewaydhcps
    singular: publicgatewaydhcp
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PublicGatewayDHCP is the Schema for the PublicGatewayDHCPs API.
          Manages Scaleway VPC Public Gateways IP.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PublicGatewayDHCPSpec defines the desired state of PublicGatewayDHCP
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  address:
                    description: The IP address of the public gateway DHCP config.
                      The address of the DHCP server. This will be the gateway's address
                      in the private network. Defaults to the first address of the
                      subnet
                    type: string
                  dnsLocalName:
                    description: TLD given to hostnames in the Private Network. Allowed
                      characters are a-z0-9-.. Defaults to the slugified Private Network
                      name if created along a GatewayNetwork, or else to priv. TLD
                      given to hostnames in the Private Network. Allowed characters
                      are `a-z0-9-.`. Defaults to the slugified Private Network name
                      if created along a GatewayNetwork, or else to `priv`.
                    type: string
                  dnsSearch:
                    description: Additional DNS search paths Additional DNS search
                      paths.
                    items:
                      type: string
                    type: array
                  dnsServersOverride:
                    description: Override the DNS server list pushed to DHCP clients,
                      instead of the gateway itself Override the DNS server list pushed
                      to DHCP clients, instead of the gateway itself.
                    items:
                      type: string
                    type: array
                  enableDynamic:
                    description: Whether to enable dynamic pooling of IPs. By turning
                      the dynamic pool off, only pre-existing DHCP reservations will
                      be handed out. Defaults to true. Whether to enable dynamic pooling
                      of IPs. By turning the dynamic pool off, only pre-existing DHCP
                      reservations will be handed out. Defaults to true.
                    type: boolean
                  poolHigh:
                    description: High IP (excluded) of the dynamic address pool. Defaults
                      to the last address of the subnet. High IP (included) of the
                      dynamic address pool. Defaults to the last address of the subnet.
                    type: string
                  poolLow:
                    description: Low IP (included) of the dynamic address pool. Defaults
                      to the second address of the subnet. Low IP (included) of the
                      dynamic address pool. Defaults to the second address of the
                      subnet.
                    type: string
                  projectId:
                    description: (Defaults to provider project_id) The ID of the project
                      the public gateway DHCP config is associated with. The project_id
                      you want to attach the resource to
                    type: string
                  pushDefaultRoute:
                    description: Whether the gateway should push a default route to
                      DHCP clients or only hand out IPs. Defaults to true. Whether
                      the gateway should push a default route to DHCP clients or only
                      hand out IPs. Defaults to true.
                    type: boolean
                  pushDnsServer:
                    description: Whether the gateway should push custom DNS servers
                      to clients. This allows for instance hostname -> IP resolution.
                      Defaults to true. Whether the gateway should push custom DNS
                      servers to clients. This allows for instance hostname -> IP
                      resolution. Defaults to true.
                    type: boolean
                  rebindTimer:
                    description: After how long, in seconds, a DHCP client will query
                      for a new lease if previous renews fail. Must be 30s lower than
                      valid_lifetime. Defaults to 51m (3060s). After how long, in
                      seconds, a DHCP client will query for a new lease if previous
                      renews fail. Must be 30s lower than `valid_lifetime`. Defaults
                      to 51m (3060s).
                    type: number
                  renewTimer:
                    description: After how long, in seconds, a renewal will be attempted.
                      Must be 30s lower than rebind_timer. Defaults to 50m (3000s).
                      After how long, in seconds, a renew will be attempted. Must
                      be 30s lower than `rebind_timer`. Defaults to 50m (3000s).
                    type: number
                  subnet:
                    description: The subnet to associate with the public gateway DHCP
                      config. Subnet for the DHCP server
                    type: string
                  validLifetime:
                    description: For how long, in seconds, will DHCP entries will
                      be valid. Defaults to 1h (3600s). For how long, in seconds,
                      will DHCP entries will be valid. Defaults to 1h (3600s).
                    type: number
                  zone:
                    description: (Defaults to provider zone) The zone in which the
                      public gateway DHCP config should be created. The zone you want
                      to attach the resource to
                    type: string
                required:
                - subnet
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PublicGatewayDHCPStatus defines the observed state of PublicGatewayDHCP.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: The date and time of the creation of the public gateway
                      DHCP config. The date and time of the creation of the public
                      gateway.
                    type: string
                  id:
                    description: The ID of the public gateway DHCP config.
                    type: string
                  organizationId:
                    description: The organization ID the public gateway DHCP config
                      is associated with. The organization_id you want to attach the
                      resource to
                    type: string
                  updatedAt:
                    description: The date and time of the last update of the public
                      gateway DHCP config. The date and time of the last update of
                      the public gateway.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
