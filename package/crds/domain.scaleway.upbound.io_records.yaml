---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: records.domain.scaleway.upbound.io
spec:
  group: domain.scaleway.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - scaleway
    kind: Record
    listKind: RecordList
    plural: records
    singular: record
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Record is the Schema for the Records API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RecordSpec defines the desired state of Record
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  data:
                    description: The content of the record (an IPv4 for an A, a string
                      for a TXT...). The data of the record
                    type: string
                  dnsZone:
                    description: The DNS Zone of the domain. If the DNS zone doesn't
                      exist, it will be automatically created. The zone you want to
                      add the record in
                    type: string
                  dnsZoneRef:
                    description: Reference to a Zone to populate dnsZone.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  dnsZoneSelector:
                    description: Selector for a Zone to populate dnsZone.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  geoIp:
                    description: The Geo IP feature provides DNS resolution, based
                      on the userâ€™s geographical location. You can define a default
                      IP that resolves if no Geo IP rule matches, and specify IPs
                      for each geographical zone. Documentation and usage example
                      Return record based on client localisation
                    items:
                      properties:
                        matches:
                          description: The list of matches. (Can be more than 1) The
                            list of matches
                          items:
                            properties:
                              continents:
                                description: 'List of continents (eg: EU for Europe,
                                  NA for North America, AS for Asia...). List of all
                                  continents code List of continents (eg: EU for Europe,
                                  NA for North America, AS for Asia...). List of all
                                  continents code: https://api.scaleway.com/domain-private/v2beta1/continents'
                                items:
                                  type: string
                                type: array
                              countries:
                                description: 'List of countries (eg: FR for France,
                                  US for the United States, GB for Great Britain...).
                                  List of all countries code List of countries (eg:
                                  FR for France, US for the United States, GB for
                                  Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries'
                                items:
                                  type: string
                                type: array
                              data:
                                description: The content of the record (an IPv4 for
                                  an A, a string for a TXT...). The data of the match
                                  result
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  httpService:
                    description: The DNS service checks the provided URL on the configured
                      IPs and resolves the request to one of the IPs by excluding
                      the ones not responding to the given string to check. Documentation
                      and usage example Return record based on client localisation
                    items:
                      properties:
                        ips:
                          description: List of IPs to check IPs to check
                          items:
                            type: string
                          type: array
                        mustContain:
                          description: Text to search Text to search
                          type: string
                        strategy:
                          description: Strategy to return an IP from the IPs list.
                            Can be random, hashed or all Strategy to return an IP
                            from the IPs list
                          type: string
                        url:
                          description: URL to match the must_contain text to validate
                            an IP URL to match the must_contain text to validate an
                            IP
                          type: string
                        userAgent:
                          description: User-agent used when checking the URL User-agent
                            used when checking the URL
                          type: string
                      type: object
                    type: array
                  keepEmptyZone:
                    description: When destroying a resource, if only NS records remain
                      and this is set to false, the zone will be deleted. Please note,
                      each zone not deleted will cost you money When destroy a resource
                      record, if a zone have only NS, delete the zone
                    type: boolean
                  name:
                    description: The name of the record (can be an empty string for
                      a root record). The name of the record
                    type: string
                  priority:
                    description: The priority of the record (mostly used with an MX
                      record) The priority of the record
                    type: number
                  projectId:
                    description: The ID of the record. The project_id you want to
                      attach the resource to
                    type: string
                  ttl:
                    description: Time To Live of the record in seconds. The ttl of
                      the record
                    type: number
                  type:
                    description: The type of the record (A, AAAA, MX, CNAME, DNAME,
                      ALIAS, NS, PTR, SRV, TXT, TLSA, or CAA). The type of the record
                    type: string
                  view:
                    description: The answer to a DNS request is based on the clientâ€™s
                      (resolver) subnet. (Can be more than 1) Documentation and usage
                      example Return record based on client subnet
                    items:
                      properties:
                        data:
                          description: The content of the record (an IPv4 for an A,
                            a string for a TXT...). The data of the view record
                          type: string
                        subnet:
                          description: The subnet of the view The subnet of the view
                          type: string
                      type: object
                    type: array
                  weighted:
                    description: You provide a list of IPs with their corresponding
                      weights. These weights are used to proportionally direct requests
                      to each IP. Depending on the weight of a record more or fewer
                      requests are answered with its related IP compared to the others
                      in the list. (Can be more than 1) Documentation and usage example
                      Return record based on weight
                    items:
                      properties:
                        ip:
                          description: The weighted IP The weighted IP
                          type: string
                        weight:
                          description: The weight of the IP as an integer UInt32.
                            The weight of the IP
                          type: number
                      type: object
                    type: array
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  data:
                    description: The content of the record (an IPv4 for an A, a string
                      for a TXT...). The data of the record
                    type: string
                  geoIp:
                    description: The Geo IP feature provides DNS resolution, based
                      on the userâ€™s geographical location. You can define a default
                      IP that resolves if no Geo IP rule matches, and specify IPs
                      for each geographical zone. Documentation and usage example
                      Return record based on client localisation
                    items:
                      properties:
                        matches:
                          description: The list of matches. (Can be more than 1) The
                            list of matches
                          items:
                            properties:
                              continents:
                                description: 'List of continents (eg: EU for Europe,
                                  NA for North America, AS for Asia...). List of all
                                  continents code List of continents (eg: EU for Europe,
                                  NA for North America, AS for Asia...). List of all
                                  continents code: https://api.scaleway.com/domain-private/v2beta1/continents'
                                items:
                                  type: string
                                type: array
                              countries:
                                description: 'List of countries (eg: FR for France,
                                  US for the United States, GB for Great Britain...).
                                  List of all countries code List of countries (eg:
                                  FR for France, US for the United States, GB for
                                  Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries'
                                items:
                                  type: string
                                type: array
                              data:
                                description: The content of the record (an IPv4 for
                                  an A, a string for a TXT...). The data of the match
                                  result
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  httpService:
                    description: The DNS service checks the provided URL on the configured
                      IPs and resolves the request to one of the IPs by excluding
                      the ones not responding to the given string to check. Documentation
                      and usage example Return record based on client localisation
                    items:
                      properties:
                        ips:
                          description: List of IPs to check IPs to check
                          items:
                            type: string
                          type: array
                        mustContain:
                          description: Text to search Text to search
                          type: string
                        strategy:
                          description: Strategy to return an IP from the IPs list.
                            Can be random, hashed or all Strategy to return an IP
                            from the IPs list
                          type: string
                        url:
                          description: URL to match the must_contain text to validate
                            an IP URL to match the must_contain text to validate an
                            IP
                          type: string
                        userAgent:
                          description: User-agent used when checking the URL User-agent
                            used when checking the URL
                          type: string
                      type: object
                    type: array
                  keepEmptyZone:
                    description: When destroying a resource, if only NS records remain
                      and this is set to false, the zone will be deleted. Please note,
                      each zone not deleted will cost you money When destroy a resource
                      record, if a zone have only NS, delete the zone
                    type: boolean
                  name:
                    description: The name of the record (can be an empty string for
                      a root record). The name of the record
                    type: string
                  priority:
                    description: The priority of the record (mostly used with an MX
                      record) The priority of the record
                    type: number
                  projectId:
                    description: The ID of the record. The project_id you want to
                      attach the resource to
                    type: string
                  ttl:
                    description: Time To Live of the record in seconds. The ttl of
                      the record
                    type: number
                  type:
                    description: The type of the record (A, AAAA, MX, CNAME, DNAME,
                      ALIAS, NS, PTR, SRV, TXT, TLSA, or CAA). The type of the record
                    type: string
                  view:
                    description: The answer to a DNS request is based on the clientâ€™s
                      (resolver) subnet. (Can be more than 1) Documentation and usage
                      example Return record based on client subnet
                    items:
                      properties:
                        data:
                          description: The content of the record (an IPv4 for an A,
                            a string for a TXT...). The data of the view record
                          type: string
                        subnet:
                          description: The subnet of the view The subnet of the view
                          type: string
                      type: object
                    type: array
                  weighted:
                    description: You provide a list of IPs with their corresponding
                      weights. These weights are used to proportionally direct requests
                      to each IP. Depending on the weight of a record more or fewer
                      requests are answered with its related IP compared to the others
                      in the list. (Can be more than 1) Documentation and usage example
                      Return record based on weight
                    items:
                      properties:
                        ip:
                          description: The weighted IP The weighted IP
                          type: string
                        weight:
                          description: The weight of the IP as an integer UInt32.
                            The weight of the IP
                          type: number
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.data is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.data)
                || (has(self.initProvider) && has(self.initProvider.data))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: RecordStatus defines the observed state of Record.
            properties:
              atProvider:
                properties:
                  data:
                    description: The content of the record (an IPv4 for an A, a string
                      for a TXT...). The data of the record
                    type: string
                  dnsZone:
                    description: The DNS Zone of the domain. If the DNS zone doesn't
                      exist, it will be automatically created. The zone you want to
                      add the record in
                    type: string
                  geoIp:
                    description: The Geo IP feature provides DNS resolution, based
                      on the userâ€™s geographical location. You can define a default
                      IP that resolves if no Geo IP rule matches, and specify IPs
                      for each geographical zone. Documentation and usage example
                      Return record based on client localisation
                    items:
                      properties:
                        matches:
                          description: The list of matches. (Can be more than 1) The
                            list of matches
                          items:
                            properties:
                              continents:
                                description: 'List of continents (eg: EU for Europe,
                                  NA for North America, AS for Asia...). List of all
                                  continents code List of continents (eg: EU for Europe,
                                  NA for North America, AS for Asia...). List of all
                                  continents code: https://api.scaleway.com/domain-private/v2beta1/continents'
                                items:
                                  type: string
                                type: array
                              countries:
                                description: 'List of countries (eg: FR for France,
                                  US for the United States, GB for Great Britain...).
                                  List of all countries code List of countries (eg:
                                  FR for France, US for the United States, GB for
                                  Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries'
                                items:
                                  type: string
                                type: array
                              data:
                                description: The content of the record (an IPv4 for
                                  an A, a string for a TXT...). The data of the match
                                  result
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  httpService:
                    description: The DNS service checks the provided URL on the configured
                      IPs and resolves the request to one of the IPs by excluding
                      the ones not responding to the given string to check. Documentation
                      and usage example Return record based on client localisation
                    items:
                      properties:
                        ips:
                          description: List of IPs to check IPs to check
                          items:
                            type: string
                          type: array
                        mustContain:
                          description: Text to search Text to search
                          type: string
                        strategy:
                          description: Strategy to return an IP from the IPs list.
                            Can be random, hashed or all Strategy to return an IP
                            from the IPs list
                          type: string
                        url:
                          description: URL to match the must_contain text to validate
                            an IP URL to match the must_contain text to validate an
                            IP
                          type: string
                        userAgent:
                          description: User-agent used when checking the URL User-agent
                            used when checking the URL
                          type: string
                      type: object
                    type: array
                  id:
                    description: The ID of the record.
                    type: string
                  keepEmptyZone:
                    description: When destroying a resource, if only NS records remain
                      and this is set to false, the zone will be deleted. Please note,
                      each zone not deleted will cost you money When destroy a resource
                      record, if a zone have only NS, delete the zone
                    type: boolean
                  name:
                    description: The name of the record (can be an empty string for
                      a root record). The name of the record
                    type: string
                  priority:
                    description: The priority of the record (mostly used with an MX
                      record) The priority of the record
                    type: number
                  projectId:
                    description: The ID of the record. The project_id you want to
                      attach the resource to
                    type: string
                  rootZone:
                    description: Does the DNS zone is the root zone or not
                    type: boolean
                  ttl:
                    description: Time To Live of the record in seconds. The ttl of
                      the record
                    type: number
                  type:
                    description: The type of the record (A, AAAA, MX, CNAME, DNAME,
                      ALIAS, NS, PTR, SRV, TXT, TLSA, or CAA). The type of the record
                    type: string
                  view:
                    description: The answer to a DNS request is based on the clientâ€™s
                      (resolver) subnet. (Can be more than 1) Documentation and usage
                      example Return record based on client subnet
                    items:
                      properties:
                        data:
                          description: The content of the record (an IPv4 for an A,
                            a string for a TXT...). The data of the view record
                          type: string
                        subnet:
                          description: The subnet of the view The subnet of the view
                          type: string
                      type: object
                    type: array
                  weighted:
                    description: You provide a list of IPs with their corresponding
                      weights. These weights are used to proportionally direct requests
                      to each IP. Depending on the weight of a record more or fewer
                      requests are answered with its related IP compared to the others
                      in the list. (Can be more than 1) Documentation and usage example
                      Return record based on weight
                    items:
                      properties:
                        ip:
                          description: The weighted IP The weighted IP
                          type: string
                        weight:
                          description: The weight of the IP as an integer UInt32.
                            The weight of the IP
                          type: number
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
