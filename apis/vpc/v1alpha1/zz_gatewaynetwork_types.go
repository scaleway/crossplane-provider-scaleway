/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GatewayNetworkInitParameters struct {

	// (Defaults to false) Remove DHCP config on this network on destroy. It requires DHCP id.
	// Remove DHCP config on this network on destroy
	CleanupDHCP *bool `json:"cleanupDhcp,omitempty" tf:"cleanup_dhcp,omitempty"`

	// (Defaults to true) Enable DHCP config on this network. It requires DHCP id.
	// Enable DHCP config on this network
	EnableDHCP *bool `json:"enableDhcp,omitempty" tf:"enable_dhcp,omitempty"`

	// (Defaults to true) Enable masquerade on this network
	// Enable masquerade on this network
	EnableMasquerade *bool `json:"enableMasquerade,omitempty" tf:"enable_masquerade,omitempty"`

	// Auto-configure the Gateway Network using Scaleway's IPAM (IP address management service). Only one of dhcp_id, static_address and ipam_config should be specified.
	// Auto-configure the Gateway Network using Scaleway's IPAM (IP address management service)
	IpamConfig []IpamConfigInitParameters `json:"ipamConfig,omitempty" tf:"ipam_config,omitempty"`

	// Enable DHCP config on this network. Only one of dhcp_id, static_address and ipam_config should be specified.
	// The static IP address in CIDR on this network
	StaticAddress *string `json:"staticAddress,omitempty" tf:"static_address,omitempty"`

	// (Defaults to provider zone) The zone in which the gateway network should be created.
	// The zone you want to attach the resource to
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type GatewayNetworkObservation struct {

	// (Defaults to false) Remove DHCP config on this network on destroy. It requires DHCP id.
	// Remove DHCP config on this network on destroy
	CleanupDHCP *bool `json:"cleanupDhcp,omitempty" tf:"cleanup_dhcp,omitempty"`

	// The date and time of the creation of the gateway network.
	// The date and time of the creation of the gateway network
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// The ID of the public gateway DHCP config. Only one of dhcp_id, static_address and ipam_config should be specified.
	// The ID of the public gateway DHCP config
	DHCPID *string `json:"dhcpId,omitempty" tf:"dhcp_id,omitempty"`

	// (Defaults to true) Enable DHCP config on this network. It requires DHCP id.
	// Enable DHCP config on this network
	EnableDHCP *bool `json:"enableDhcp,omitempty" tf:"enable_dhcp,omitempty"`

	// (Defaults to true) Enable masquerade on this network
	// Enable masquerade on this network
	EnableMasquerade *bool `json:"enableMasquerade,omitempty" tf:"enable_masquerade,omitempty"`

	// The ID of the public gateway.
	// The ID of the public gateway where connect to
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// The ID of the gateway network.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Auto-configure the Gateway Network using Scaleway's IPAM (IP address management service). Only one of dhcp_id, static_address and ipam_config should be specified.
	// Auto-configure the Gateway Network using Scaleway's IPAM (IP address management service)
	IpamConfig []IpamConfigObservation `json:"ipamConfig,omitempty" tf:"ipam_config,omitempty"`

	// The mac address of the creation of the gateway network.
	// The mac address on this network
	MacAddress *string `json:"macAddress,omitempty" tf:"mac_address,omitempty"`

	// The ID of the private network.
	// The ID of the private network where connect to
	PrivateNetworkID *string `json:"privateNetworkId,omitempty" tf:"private_network_id,omitempty"`

	// Enable DHCP config on this network. Only one of dhcp_id, static_address and ipam_config should be specified.
	// The static IP address in CIDR on this network
	StaticAddress *string `json:"staticAddress,omitempty" tf:"static_address,omitempty"`

	// The status of the Public Gateway's connection to the Private Network.
	// The status of the Public Gateway's connection to the Private Network
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The date and time of the last update of the gateway network.
	// The date and time of the last update of the gateway network
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// (Defaults to provider zone) The zone in which the gateway network should be created.
	// The zone you want to attach the resource to
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type GatewayNetworkParameters struct {

	// (Defaults to false) Remove DHCP config on this network on destroy. It requires DHCP id.
	// Remove DHCP config on this network on destroy
	// +kubebuilder:validation:Optional
	CleanupDHCP *bool `json:"cleanupDhcp,omitempty" tf:"cleanup_dhcp,omitempty"`

	// The ID of the public gateway DHCP config. Only one of dhcp_id, static_address and ipam_config should be specified.
	// The ID of the public gateway DHCP config
	// +crossplane:generate:reference:type=PublicGatewayDHCP
	// +kubebuilder:validation:Optional
	DHCPID *string `json:"dhcpId,omitempty" tf:"dhcp_id,omitempty"`

	// Reference to a PublicGatewayDHCP to populate dhcpId.
	// +kubebuilder:validation:Optional
	DHCPIDRef *v1.Reference `json:"dhcpIdRef,omitempty" tf:"-"`

	// Selector for a PublicGatewayDHCP to populate dhcpId.
	// +kubebuilder:validation:Optional
	DHCPIDSelector *v1.Selector `json:"dhcpIdSelector,omitempty" tf:"-"`

	// (Defaults to true) Enable DHCP config on this network. It requires DHCP id.
	// Enable DHCP config on this network
	// +kubebuilder:validation:Optional
	EnableDHCP *bool `json:"enableDhcp,omitempty" tf:"enable_dhcp,omitempty"`

	// (Defaults to true) Enable masquerade on this network
	// Enable masquerade on this network
	// +kubebuilder:validation:Optional
	EnableMasquerade *bool `json:"enableMasquerade,omitempty" tf:"enable_masquerade,omitempty"`

	// The ID of the public gateway.
	// The ID of the public gateway where connect to
	// +crossplane:generate:reference:type=PublicGateway
	// +kubebuilder:validation:Optional
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// Reference to a PublicGateway to populate gatewayId.
	// +kubebuilder:validation:Optional
	GatewayIDRef *v1.Reference `json:"gatewayIdRef,omitempty" tf:"-"`

	// Selector for a PublicGateway to populate gatewayId.
	// +kubebuilder:validation:Optional
	GatewayIDSelector *v1.Selector `json:"gatewayIdSelector,omitempty" tf:"-"`

	// Auto-configure the Gateway Network using Scaleway's IPAM (IP address management service). Only one of dhcp_id, static_address and ipam_config should be specified.
	// Auto-configure the Gateway Network using Scaleway's IPAM (IP address management service)
	// +kubebuilder:validation:Optional
	IpamConfig []IpamConfigParameters `json:"ipamConfig,omitempty" tf:"ipam_config,omitempty"`

	// The ID of the private network.
	// The ID of the private network where connect to
	// +crossplane:generate:reference:type=PrivateNetwork
	// +kubebuilder:validation:Optional
	PrivateNetworkID *string `json:"privateNetworkId,omitempty" tf:"private_network_id,omitempty"`

	// Reference to a PrivateNetwork to populate privateNetworkId.
	// +kubebuilder:validation:Optional
	PrivateNetworkIDRef *v1.Reference `json:"privateNetworkIdRef,omitempty" tf:"-"`

	// Selector for a PrivateNetwork to populate privateNetworkId.
	// +kubebuilder:validation:Optional
	PrivateNetworkIDSelector *v1.Selector `json:"privateNetworkIdSelector,omitempty" tf:"-"`

	// Enable DHCP config on this network. Only one of dhcp_id, static_address and ipam_config should be specified.
	// The static IP address in CIDR on this network
	// +kubebuilder:validation:Optional
	StaticAddress *string `json:"staticAddress,omitempty" tf:"static_address,omitempty"`

	// (Defaults to provider zone) The zone in which the gateway network should be created.
	// The zone you want to attach the resource to
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type IpamConfigInitParameters struct {

	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network.
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
	IpamIPID *string `json:"ipamIpId,omitempty" tf:"ipam_ip_id,omitempty"`

	// Defines whether the default route is enabled on that Gateway Network.
	// Defines whether the default route is enabled on that Gateway Network
	PushDefaultRoute *bool `json:"pushDefaultRoute,omitempty" tf:"push_default_route,omitempty"`
}

type IpamConfigObservation struct {

	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network.
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
	IpamIPID *string `json:"ipamIpId,omitempty" tf:"ipam_ip_id,omitempty"`

	// Defines whether the default route is enabled on that Gateway Network.
	// Defines whether the default route is enabled on that Gateway Network
	PushDefaultRoute *bool `json:"pushDefaultRoute,omitempty" tf:"push_default_route,omitempty"`
}

type IpamConfigParameters struct {

	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network.
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
	// +kubebuilder:validation:Optional
	IpamIPID *string `json:"ipamIpId,omitempty" tf:"ipam_ip_id,omitempty"`

	// Defines whether the default route is enabled on that Gateway Network.
	// Defines whether the default route is enabled on that Gateway Network
	// +kubebuilder:validation:Optional
	PushDefaultRoute *bool `json:"pushDefaultRoute,omitempty" tf:"push_default_route,omitempty"`
}

// GatewayNetworkSpec defines the desired state of GatewayNetwork
type GatewayNetworkSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GatewayNetworkParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GatewayNetworkInitParameters `json:"initProvider,omitempty"`
}

// GatewayNetworkStatus defines the observed state of GatewayNetwork.
type GatewayNetworkStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GatewayNetworkObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GatewayNetwork is the Schema for the GatewayNetworks API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,scaleway}
type GatewayNetwork struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GatewayNetworkSpec   `json:"spec"`
	Status            GatewayNetworkStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GatewayNetworkList contains a list of GatewayNetworks
type GatewayNetworkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GatewayNetwork `json:"items"`
}

// Repository type metadata.
var (
	GatewayNetwork_Kind             = "GatewayNetwork"
	GatewayNetwork_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GatewayNetwork_Kind}.String()
	GatewayNetwork_KindAPIVersion   = GatewayNetwork_Kind + "." + CRDGroupVersion.String()
	GatewayNetwork_GroupVersionKind = CRDGroupVersion.WithKind(GatewayNetwork_Kind)
)

func init() {
	SchemeBuilder.Register(&GatewayNetwork{}, &GatewayNetworkList{})
}
