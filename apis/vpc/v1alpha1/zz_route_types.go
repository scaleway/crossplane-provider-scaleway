/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RouteInitParameters struct {

	// The route description.
	// The route description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The destination of the route.
	// The destination IP or IP range of the route
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// The ID of the nexthop private network.
	// The ID of the nexthop private network
	NexthopPrivateNetworkID *string `json:"nexthopPrivateNetworkId,omitempty" tf:"nexthop_private_network_id,omitempty"`

	// The ID of the nexthop resource.
	// The ID of the nexthop resource
	NexthopResourceID *string `json:"nexthopResourceId,omitempty" tf:"nexthop_resource_id,omitempty"`

	// (Defaults to provider region) The region of the route.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The tags to associate with the route.
	// The tags associated with the Route
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The VPC ID the route belongs to.
	// VPC ID the Route belongs to
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

type RouteObservation struct {

	// The date and time of the creation of the route (RFC 3339 format).
	// The date and time of the creation of the route
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// The route description.
	// The route description
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The destination of the route.
	// The destination IP or IP range of the route
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// The ID of the route.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the nexthop private network.
	// The ID of the nexthop private network
	NexthopPrivateNetworkID *string `json:"nexthopPrivateNetworkId,omitempty" tf:"nexthop_private_network_id,omitempty"`

	// The ID of the nexthop resource.
	// The ID of the nexthop resource
	NexthopResourceID *string `json:"nexthopResourceId,omitempty" tf:"nexthop_resource_id,omitempty"`

	// (Defaults to provider region) The region of the route.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The tags to associate with the route.
	// The tags associated with the Route
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The date and time of the creation of the route (RFC 3339 format).
	// The date and time of the last update of the route
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// The VPC ID the route belongs to.
	// VPC ID the Route belongs to
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type RouteParameters struct {

	// The route description.
	// The route description
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The destination of the route.
	// The destination IP or IP range of the route
	// +kubebuilder:validation:Optional
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// The ID of the nexthop private network.
	// The ID of the nexthop private network
	// +kubebuilder:validation:Optional
	NexthopPrivateNetworkID *string `json:"nexthopPrivateNetworkId,omitempty" tf:"nexthop_private_network_id,omitempty"`

	// The ID of the nexthop resource.
	// The ID of the nexthop resource
	// +kubebuilder:validation:Optional
	NexthopResourceID *string `json:"nexthopResourceId,omitempty" tf:"nexthop_resource_id,omitempty"`

	// (Defaults to provider region) The region of the route.
	// The region you want to attach the resource to
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The tags to associate with the route.
	// The tags associated with the Route
	// +kubebuilder:validation:Optional
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The VPC ID the route belongs to.
	// VPC ID the Route belongs to
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

// RouteSpec defines the desired state of Route
type RouteSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RouteParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RouteInitParameters `json:"initProvider,omitempty"`
}

// RouteStatus defines the observed state of Route.
type RouteStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RouteObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Route is the Schema for the Routes API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,scaleway}
type Route struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RouteSpec   `json:"spec"`
	Status            RouteStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RouteList contains a list of Routes
type RouteList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Route `json:"items"`
}

// Repository type metadata.
var (
	Route_Kind             = "Route"
	Route_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Route_Kind}.String()
	Route_KindAPIVersion   = Route_Kind + "." + CRDGroupVersion.String()
	Route_GroupVersionKind = CRDGroupVersion.WithKind(Route_Kind)
)

func init() {
	SchemeBuilder.Register(&Route{}, &RouteList{})
}
