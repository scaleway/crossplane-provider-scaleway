/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DirectAccessInitParameters struct {
}

type DirectAccessObservation struct {

	// The ID of the endpoint of the read replica.
	// UUID of the endpoint (UUID format).
	EndpointID *string `json:"endpointId,omitempty" tf:"endpoint_id,omitempty"`

	// Hostname of the endpoint. Only one of ip and hostname may be set.
	// Hostname of the endpoint. Only one of ip and hostname may be set.
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// Name of the endpoint.
	// Name of the endpoint.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// TCP port of the endpoint.
	// TCP port of the endpoint.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`
}

type DirectAccessParameters struct {
}

type ReadReplicaInitParameters struct {

	// Creates a direct access endpoint to rdb replica.
	// Direct access endpoint, it gives you an IP and a port to access your read-replica
	DirectAccess []DirectAccessInitParameters `json:"directAccess,omitempty" tf:"direct_access,omitempty"`

	// Create an endpoint in a private network.
	// Private network endpoints
	PrivateNetwork []ReadReplicaPrivateNetworkInitParameters `json:"privateNetwork,omitempty" tf:"private_network,omitempty"`

	// (Defaults to provider region) The region
	// in which the Database read replica should be created.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (Defaults to false) Defines whether to create the replica in the same availability zone as the main instance nodes or not.
	// Defines whether to create the replica in the same availability zone as the main instance nodes or not.
	SameZone *bool `json:"sameZone,omitempty" tf:"same_zone,omitempty"`
}

type ReadReplicaObservation struct {

	// Creates a direct access endpoint to rdb replica.
	// Direct access endpoint, it gives you an IP and a port to access your read-replica
	DirectAccess []DirectAccessObservation `json:"directAccess,omitempty" tf:"direct_access,omitempty"`

	// The ID of the Database read replica.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// UUID of the rdb instance.
	// Id of the rdb instance to replicate
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Create an endpoint in a private network.
	// Private network endpoints
	PrivateNetwork []ReadReplicaPrivateNetworkObservation `json:"privateNetwork,omitempty" tf:"private_network,omitempty"`

	// (Defaults to provider region) The region
	// in which the Database read replica should be created.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (Defaults to false) Defines whether to create the replica in the same availability zone as the main instance nodes or not.
	// Defines whether to create the replica in the same availability zone as the main instance nodes or not.
	SameZone *bool `json:"sameZone,omitempty" tf:"same_zone,omitempty"`
}

type ReadReplicaParameters struct {

	// Creates a direct access endpoint to rdb replica.
	// Direct access endpoint, it gives you an IP and a port to access your read-replica
	// +kubebuilder:validation:Optional
	DirectAccess []DirectAccessParameters `json:"directAccess,omitempty" tf:"direct_access,omitempty"`

	// UUID of the rdb instance.
	// Id of the rdb instance to replicate
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Create an endpoint in a private network.
	// Private network endpoints
	// +kubebuilder:validation:Optional
	PrivateNetwork []ReadReplicaPrivateNetworkParameters `json:"privateNetwork,omitempty" tf:"private_network,omitempty"`

	// (Defaults to provider region) The region
	// in which the Database read replica should be created.
	// The region you want to attach the resource to
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (Defaults to false) Defines whether to create the replica in the same availability zone as the main instance nodes or not.
	// Defines whether to create the replica in the same availability zone as the main instance nodes or not.
	// +kubebuilder:validation:Optional
	SameZone *bool `json:"sameZone,omitempty" tf:"same_zone,omitempty"`
}

type ReadReplicaPrivateNetworkInitParameters struct {

	// UUID of the private network to be connected to the read replica.
	// UUID of the private network to be connected to the read replica (UUID format)
	PrivateNetworkID *string `json:"privateNetworkId,omitempty" tf:"private_network_id,omitempty"`

	// The IP network address within the private subnet. This must be an IPv4 address with a
	// CIDR notation. The IP network address within the private subnet is determined by the IP Address Management (IPAM)
	// service if not set.
	// The IP network address within the private subnet
	ServiceIP *string `json:"serviceIp,omitempty" tf:"service_ip,omitempty"`
}

type ReadReplicaPrivateNetworkObservation struct {

	// The ID of the endpoint of the read replica.
	// UUID of the endpoint (UUID format).
	EndpointID *string `json:"endpointId,omitempty" tf:"endpoint_id,omitempty"`

	// Hostname of the endpoint. Only one of ip and hostname may be set.
	// Hostname of the endpoint. Only one of ip and hostname may be set
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// Name of the endpoint.
	// Name of the endpoints
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// TCP port of the endpoint.
	// TCP port of the endpoint
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// UUID of the private network to be connected to the read replica.
	// UUID of the private network to be connected to the read replica (UUID format)
	PrivateNetworkID *string `json:"privateNetworkId,omitempty" tf:"private_network_id,omitempty"`

	// The IP network address within the private subnet. This must be an IPv4 address with a
	// CIDR notation. The IP network address within the private subnet is determined by the IP Address Management (IPAM)
	// service if not set.
	// The IP network address within the private subnet
	ServiceIP *string `json:"serviceIp,omitempty" tf:"service_ip,omitempty"`

	// Private network zone
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type ReadReplicaPrivateNetworkParameters struct {

	// UUID of the private network to be connected to the read replica.
	// UUID of the private network to be connected to the read replica (UUID format)
	// +kubebuilder:validation:Optional
	PrivateNetworkID *string `json:"privateNetworkId" tf:"private_network_id,omitempty"`

	// The IP network address within the private subnet. This must be an IPv4 address with a
	// CIDR notation. The IP network address within the private subnet is determined by the IP Address Management (IPAM)
	// service if not set.
	// The IP network address within the private subnet
	// +kubebuilder:validation:Optional
	ServiceIP *string `json:"serviceIp,omitempty" tf:"service_ip,omitempty"`
}

// ReadReplicaSpec defines the desired state of ReadReplica
type ReadReplicaSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ReadReplicaParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ReadReplicaInitParameters `json:"initProvider,omitempty"`
}

// ReadReplicaStatus defines the observed state of ReadReplica.
type ReadReplicaStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ReadReplicaObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ReadReplica is the Schema for the ReadReplicas API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,scaleway}
type ReadReplica struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ReadReplicaSpec   `json:"spec"`
	Status            ReadReplicaStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ReadReplicaList contains a list of ReadReplicas
type ReadReplicaList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ReadReplica `json:"items"`
}

// Repository type metadata.
var (
	ReadReplica_Kind             = "ReadReplica"
	ReadReplica_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ReadReplica_Kind}.String()
	ReadReplica_KindAPIVersion   = ReadReplica_Kind + "." + CRDGroupVersion.String()
	ReadReplica_GroupVersionKind = CRDGroupVersion.WithKind(ReadReplica_Kind)
)

func init() {
	SchemeBuilder.Register(&ReadReplica{}, &ReadReplicaList{})
}
