/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NATSAccountInitParameters struct {

	// The unique name of the NATS account.
	// The nats account name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Defaults to provider project_id) The ID of the Project the
	// account is associated with.
	// The project_id you want to attach the resource to
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (Defaults to provider region). The region
	// in which the account should be created.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NATSAccountObservation struct {

	// The endpoint of the NATS service for this account.
	// The endpoint for interact with Nats
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The ID of the account
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The unique name of the NATS account.
	// The nats account name
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Defaults to provider project_id) The ID of the Project the
	// account is associated with.
	// The project_id you want to attach the resource to
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (Defaults to provider region). The region
	// in which the account should be created.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NATSAccountParameters struct {

	// The unique name of the NATS account.
	// The nats account name
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Defaults to provider project_id) The ID of the Project the
	// account is associated with.
	// The project_id you want to attach the resource to
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (Defaults to provider region). The region
	// in which the account should be created.
	// The region you want to attach the resource to
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// NATSAccountSpec defines the desired state of NATSAccount
type NATSAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NATSAccountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NATSAccountInitParameters `json:"initProvider,omitempty"`
}

// NATSAccountStatus defines the observed state of NATSAccount.
type NATSAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NATSAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NATSAccount is the Schema for the NATSAccounts API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,scaleway}
type NATSAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NATSAccountSpec   `json:"spec"`
	Status            NATSAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NATSAccountList contains a list of NATSAccounts
type NATSAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NATSAccount `json:"items"`
}

// Repository type metadata.
var (
	NATSAccount_Kind             = "NATSAccount"
	NATSAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NATSAccount_Kind}.String()
	NATSAccount_KindAPIVersion   = NATSAccount_Kind + "." + CRDGroupVersion.String()
	NATSAccount_GroupVersionKind = CRDGroupVersion.WithKind(NATSAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&NATSAccount{}, &NATSAccountList{})
}
