/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SNSTopicSubscriptionInitParameters struct {

	// The access key of the SNS credentials.
	// SNS access key
	AccessKeySecretRef v1.SecretKeySelector `json:"accessKeySecretRef" tf:"-"`

	// Endpoint of the subscription
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// (Defaults to provider project_id) The ID of the Project in which SNS is enabled.
	// The project_id you want to attach the resource to
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/account/v1alpha1.Project
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in account to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in account to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// Protocol of the SNS topic subscription.
	// Protocol of the SNS Topic Subscription.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Activate JSON redrive policy.
	// JSON Redrive policy
	RedrivePolicy *bool `json:"redrivePolicy,omitempty" tf:"redrive_policy,omitempty"`

	// (Defaults to provider region). The region
	// in which SNS is enabled.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The secret key of the SNS credentials.
	// SNS secret key
	SecretKeySecretRef v1.SecretKeySelector `json:"secretKeySecretRef" tf:"-"`

	// The endpoint of the SNS service. Can contain a {region} placeholder. Defaults to https://sns.mnq.{region}.scaleway.com.
	// SNS endpoint
	SnsEndpoint *string `json:"snsEndpoint,omitempty" tf:"sns_endpoint,omitempty"`

	// The ARN of the topic. Either topic_id or topic_arn is required.
	TopicArn *string `json:"topicArn,omitempty" tf:"topic_arn,omitempty"`

	// The ID of the topic. Either topic_id or topic_arn is required. Conflicts with topic_arn.
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/mnq/v1alpha1.SNSTopic
	TopicID *string `json:"topicId,omitempty" tf:"topic_id,omitempty"`

	// Reference to a SNSTopic in mnq to populate topicId.
	// +kubebuilder:validation:Optional
	TopicIDRef *v1.Reference `json:"topicIdRef,omitempty" tf:"-"`

	// Selector for a SNSTopic in mnq to populate topicId.
	// +kubebuilder:validation:Optional
	TopicIDSelector *v1.Selector `json:"topicIdSelector,omitempty" tf:"-"`
}

type SNSTopicSubscriptionObservation struct {

	// The ARN of the topic subscription
	// ARN of the topic, should have format 'arn:scw:sns:project-${project_id}:${topic_name}:${subscription_id}'
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Endpoint of the subscription
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The ID of the topic with format {region}/{project-id}/{topic-name}/{subscription-id}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Defaults to provider project_id) The ID of the Project in which SNS is enabled.
	// The project_id you want to attach the resource to
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Protocol of the SNS topic subscription.
	// Protocol of the SNS Topic Subscription.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Activate JSON redrive policy.
	// JSON Redrive policy
	RedrivePolicy *bool `json:"redrivePolicy,omitempty" tf:"redrive_policy,omitempty"`

	// (Defaults to provider region). The region
	// in which SNS is enabled.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The endpoint of the SNS service. Can contain a {region} placeholder. Defaults to https://sns.mnq.{region}.scaleway.com.
	// SNS endpoint
	SnsEndpoint *string `json:"snsEndpoint,omitempty" tf:"sns_endpoint,omitempty"`

	// The ARN of the topic. Either topic_id or topic_arn is required.
	TopicArn *string `json:"topicArn,omitempty" tf:"topic_arn,omitempty"`

	// The ID of the topic. Either topic_id or topic_arn is required. Conflicts with topic_arn.
	TopicID *string `json:"topicId,omitempty" tf:"topic_id,omitempty"`
}

type SNSTopicSubscriptionParameters struct {

	// The access key of the SNS credentials.
	// SNS access key
	// +kubebuilder:validation:Optional
	AccessKeySecretRef v1.SecretKeySelector `json:"accessKeySecretRef" tf:"-"`

	// Endpoint of the subscription
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// (Defaults to provider project_id) The ID of the Project in which SNS is enabled.
	// The project_id you want to attach the resource to
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/account/v1alpha1.Project
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in account to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in account to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// Protocol of the SNS topic subscription.
	// Protocol of the SNS Topic Subscription.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Activate JSON redrive policy.
	// JSON Redrive policy
	// +kubebuilder:validation:Optional
	RedrivePolicy *bool `json:"redrivePolicy,omitempty" tf:"redrive_policy,omitempty"`

	// (Defaults to provider region). The region
	// in which SNS is enabled.
	// The region you want to attach the resource to
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The secret key of the SNS credentials.
	// SNS secret key
	// +kubebuilder:validation:Optional
	SecretKeySecretRef v1.SecretKeySelector `json:"secretKeySecretRef" tf:"-"`

	// The endpoint of the SNS service. Can contain a {region} placeholder. Defaults to https://sns.mnq.{region}.scaleway.com.
	// SNS endpoint
	// +kubebuilder:validation:Optional
	SnsEndpoint *string `json:"snsEndpoint,omitempty" tf:"sns_endpoint,omitempty"`

	// The ARN of the topic. Either topic_id or topic_arn is required.
	// +kubebuilder:validation:Optional
	TopicArn *string `json:"topicArn,omitempty" tf:"topic_arn,omitempty"`

	// The ID of the topic. Either topic_id or topic_arn is required. Conflicts with topic_arn.
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/mnq/v1alpha1.SNSTopic
	// +kubebuilder:validation:Optional
	TopicID *string `json:"topicId,omitempty" tf:"topic_id,omitempty"`

	// Reference to a SNSTopic in mnq to populate topicId.
	// +kubebuilder:validation:Optional
	TopicIDRef *v1.Reference `json:"topicIdRef,omitempty" tf:"-"`

	// Selector for a SNSTopic in mnq to populate topicId.
	// +kubebuilder:validation:Optional
	TopicIDSelector *v1.Selector `json:"topicIdSelector,omitempty" tf:"-"`
}

// SNSTopicSubscriptionSpec defines the desired state of SNSTopicSubscription
type SNSTopicSubscriptionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SNSTopicSubscriptionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SNSTopicSubscriptionInitParameters `json:"initProvider,omitempty"`
}

// SNSTopicSubscriptionStatus defines the observed state of SNSTopicSubscription.
type SNSTopicSubscriptionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SNSTopicSubscriptionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SNSTopicSubscription is the Schema for the SNSTopicSubscriptions API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,scaleway}
type SNSTopicSubscription struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accessKeySecretRef)",message="spec.forProvider.accessKeySecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protocol) || (has(self.initProvider) && has(self.initProvider.protocol))",message="spec.forProvider.protocol is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.secretKeySecretRef)",message="spec.forProvider.secretKeySecretRef is a required parameter"
	Spec   SNSTopicSubscriptionSpec   `json:"spec"`
	Status SNSTopicSubscriptionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SNSTopicSubscriptionList contains a list of SNSTopicSubscriptions
type SNSTopicSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SNSTopicSubscription `json:"items"`
}

// Repository type metadata.
var (
	SNSTopicSubscription_Kind             = "SNSTopicSubscription"
	SNSTopicSubscription_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SNSTopicSubscription_Kind}.String()
	SNSTopicSubscription_KindAPIVersion   = SNSTopicSubscription_Kind + "." + CRDGroupVersion.String()
	SNSTopicSubscription_GroupVersionKind = CRDGroupVersion.WithKind(SNSTopicSubscription_Kind)
)

func init() {
	SchemeBuilder.Register(&SNSTopicSubscription{}, &SNSTopicSubscriptionList{})
}
