/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SQSQueueInitParameters struct {

	// The access key of the SQS queue.
	// SQS access key
	AccessKeySecretRef v1.SecretKeySelector `json:"accessKeySecretRef" tf:"-"`

	// Specifies whether to enable content-based deduplication. Defaults to false.
	// Specifies whether to enable content-based deduplication. Allows omitting the deduplication ID
	ContentBasedDeduplication *bool `json:"contentBasedDeduplication,omitempty" tf:"content_based_deduplication,omitempty"`

	// Whether the queue is a FIFO queue. If true, the queue name must end with .fifo. Defaults to false.
	// Whether the queue is a FIFO queue. If true, the queue name must end with .fifo
	FifoQueue *bool `json:"fifoQueue,omitempty" tf:"fifo_queue,omitempty"`

	// The number of seconds the queue retains a message. Must be between 60 and 1_209_600. Defaults to 345_600.
	// The number of seconds the queue retains a message.
	MessageMaxAge *float64 `json:"messageMaxAge,omitempty" tf:"message_max_age,omitempty"`

	// The maximum size of a message. Should be in bytes. Must be between 1024 and 262_144. Defaults to 262_144.
	// The maximum size of a message. Should be in bytes.
	MessageMaxSize *float64 `json:"messageMaxSize,omitempty" tf:"message_max_size,omitempty"`

	// The unique name of the SQS queue. Either name or name_prefix is required. Conflicts with name_prefix.
	// The name of the queue. Conflicts with name_prefix.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Creates a unique name beginning with the specified prefix. Conflicts with name.
	// Creates a unique name beginning with the specified prefix. Conflicts with name.
	NamePrefix *string `json:"namePrefix,omitempty" tf:"name_prefix,omitempty"`

	// (Defaults to provider project_id) The ID of the Project in which SQS is enabled.
	// The project_id you want to attach the resource to
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/account/v1alpha1.Project
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in account to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in account to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// The number of seconds to wait for a message to arrive in the queue before returning. Must be between 0 and 20. Defaults to 0.
	// The number of seconds to wait for a message to arrive in the queue before returning.
	ReceiveWaitTimeSeconds *float64 `json:"receiveWaitTimeSeconds,omitempty" tf:"receive_wait_time_seconds,omitempty"`

	// (Defaults to provider region). The region in which SQS is enabled.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The secret key of the SQS queue.
	// SQS secret key
	SecretKeySecretRef v1.SecretKeySelector `json:"secretKeySecretRef" tf:"-"`

	// The endpoint of the SQS queue. Can contain a {region} placeholder. Defaults to https://sqs.mnq.{region}.scaleway.com.
	// The sqs endpoint
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/mnq/v1alpha1.SQS
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("endpoint",true)
	SqsEndpoint *string `json:"sqsEndpoint,omitempty" tf:"sqs_endpoint,omitempty"`

	// Reference to a SQS in mnq to populate sqsEndpoint.
	// +kubebuilder:validation:Optional
	SqsEndpointRef *v1.Reference `json:"sqsEndpointRef,omitempty" tf:"-"`

	// Selector for a SQS in mnq to populate sqsEndpoint.
	// +kubebuilder:validation:Optional
	SqsEndpointSelector *v1.Selector `json:"sqsEndpointSelector,omitempty" tf:"-"`

	// The number of seconds a message is hidden from other consumers. Must be between 0 and 43_200. Defaults to 30.
	// The number of seconds a message is hidden from other consumers.
	VisibilityTimeoutSeconds *float64 `json:"visibilityTimeoutSeconds,omitempty" tf:"visibility_timeout_seconds,omitempty"`
}

type SQSQueueObservation struct {

	// Specifies whether to enable content-based deduplication. Defaults to false.
	// Specifies whether to enable content-based deduplication. Allows omitting the deduplication ID
	ContentBasedDeduplication *bool `json:"contentBasedDeduplication,omitempty" tf:"content_based_deduplication,omitempty"`

	// Whether the queue is a FIFO queue. If true, the queue name must end with .fifo. Defaults to false.
	// Whether the queue is a FIFO queue. If true, the queue name must end with .fifo
	FifoQueue *bool `json:"fifoQueue,omitempty" tf:"fifo_queue,omitempty"`

	// The ID of the queue with format {region/{project-id}/{queue-name}
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The number of seconds the queue retains a message. Must be between 60 and 1_209_600. Defaults to 345_600.
	// The number of seconds the queue retains a message.
	MessageMaxAge *float64 `json:"messageMaxAge,omitempty" tf:"message_max_age,omitempty"`

	// The maximum size of a message. Should be in bytes. Must be between 1024 and 262_144. Defaults to 262_144.
	// The maximum size of a message. Should be in bytes.
	MessageMaxSize *float64 `json:"messageMaxSize,omitempty" tf:"message_max_size,omitempty"`

	// The unique name of the SQS queue. Either name or name_prefix is required. Conflicts with name_prefix.
	// The name of the queue. Conflicts with name_prefix.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Creates a unique name beginning with the specified prefix. Conflicts with name.
	// Creates a unique name beginning with the specified prefix. Conflicts with name.
	NamePrefix *string `json:"namePrefix,omitempty" tf:"name_prefix,omitempty"`

	// (Defaults to provider project_id) The ID of the Project in which SQS is enabled.
	// The project_id you want to attach the resource to
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The number of seconds to wait for a message to arrive in the queue before returning. Must be between 0 and 20. Defaults to 0.
	// The number of seconds to wait for a message to arrive in the queue before returning.
	ReceiveWaitTimeSeconds *float64 `json:"receiveWaitTimeSeconds,omitempty" tf:"receive_wait_time_seconds,omitempty"`

	// (Defaults to provider region). The region in which SQS is enabled.
	// The region you want to attach the resource to
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The endpoint of the SQS queue. Can contain a {region} placeholder. Defaults to https://sqs.mnq.{region}.scaleway.com.
	// The sqs endpoint
	SqsEndpoint *string `json:"sqsEndpoint,omitempty" tf:"sqs_endpoint,omitempty"`

	// The URL of the queue.
	// The URL of the queue
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// The number of seconds a message is hidden from other consumers. Must be between 0 and 43_200. Defaults to 30.
	// The number of seconds a message is hidden from other consumers.
	VisibilityTimeoutSeconds *float64 `json:"visibilityTimeoutSeconds,omitempty" tf:"visibility_timeout_seconds,omitempty"`
}

type SQSQueueParameters struct {

	// The access key of the SQS queue.
	// SQS access key
	// +kubebuilder:validation:Optional
	AccessKeySecretRef v1.SecretKeySelector `json:"accessKeySecretRef" tf:"-"`

	// Specifies whether to enable content-based deduplication. Defaults to false.
	// Specifies whether to enable content-based deduplication. Allows omitting the deduplication ID
	// +kubebuilder:validation:Optional
	ContentBasedDeduplication *bool `json:"contentBasedDeduplication,omitempty" tf:"content_based_deduplication,omitempty"`

	// Whether the queue is a FIFO queue. If true, the queue name must end with .fifo. Defaults to false.
	// Whether the queue is a FIFO queue. If true, the queue name must end with .fifo
	// +kubebuilder:validation:Optional
	FifoQueue *bool `json:"fifoQueue,omitempty" tf:"fifo_queue,omitempty"`

	// The number of seconds the queue retains a message. Must be between 60 and 1_209_600. Defaults to 345_600.
	// The number of seconds the queue retains a message.
	// +kubebuilder:validation:Optional
	MessageMaxAge *float64 `json:"messageMaxAge,omitempty" tf:"message_max_age,omitempty"`

	// The maximum size of a message. Should be in bytes. Must be between 1024 and 262_144. Defaults to 262_144.
	// The maximum size of a message. Should be in bytes.
	// +kubebuilder:validation:Optional
	MessageMaxSize *float64 `json:"messageMaxSize,omitempty" tf:"message_max_size,omitempty"`

	// The unique name of the SQS queue. Either name or name_prefix is required. Conflicts with name_prefix.
	// The name of the queue. Conflicts with name_prefix.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Creates a unique name beginning with the specified prefix. Conflicts with name.
	// Creates a unique name beginning with the specified prefix. Conflicts with name.
	// +kubebuilder:validation:Optional
	NamePrefix *string `json:"namePrefix,omitempty" tf:"name_prefix,omitempty"`

	// (Defaults to provider project_id) The ID of the Project in which SQS is enabled.
	// The project_id you want to attach the resource to
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/account/v1alpha1.Project
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in account to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in account to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// The number of seconds to wait for a message to arrive in the queue before returning. Must be between 0 and 20. Defaults to 0.
	// The number of seconds to wait for a message to arrive in the queue before returning.
	// +kubebuilder:validation:Optional
	ReceiveWaitTimeSeconds *float64 `json:"receiveWaitTimeSeconds,omitempty" tf:"receive_wait_time_seconds,omitempty"`

	// (Defaults to provider region). The region in which SQS is enabled.
	// The region you want to attach the resource to
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The secret key of the SQS queue.
	// SQS secret key
	// +kubebuilder:validation:Optional
	SecretKeySecretRef v1.SecretKeySelector `json:"secretKeySecretRef" tf:"-"`

	// The endpoint of the SQS queue. Can contain a {region} placeholder. Defaults to https://sqs.mnq.{region}.scaleway.com.
	// The sqs endpoint
	// +crossplane:generate:reference:type=github.com/scaleway/crossplane-provider-scaleway/apis/mnq/v1alpha1.SQS
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("endpoint",true)
	// +kubebuilder:validation:Optional
	SqsEndpoint *string `json:"sqsEndpoint,omitempty" tf:"sqs_endpoint,omitempty"`

	// Reference to a SQS in mnq to populate sqsEndpoint.
	// +kubebuilder:validation:Optional
	SqsEndpointRef *v1.Reference `json:"sqsEndpointRef,omitempty" tf:"-"`

	// Selector for a SQS in mnq to populate sqsEndpoint.
	// +kubebuilder:validation:Optional
	SqsEndpointSelector *v1.Selector `json:"sqsEndpointSelector,omitempty" tf:"-"`

	// The number of seconds a message is hidden from other consumers. Must be between 0 and 43_200. Defaults to 30.
	// The number of seconds a message is hidden from other consumers.
	// +kubebuilder:validation:Optional
	VisibilityTimeoutSeconds *float64 `json:"visibilityTimeoutSeconds,omitempty" tf:"visibility_timeout_seconds,omitempty"`
}

// SQSQueueSpec defines the desired state of SQSQueue
type SQSQueueSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SQSQueueParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SQSQueueInitParameters `json:"initProvider,omitempty"`
}

// SQSQueueStatus defines the observed state of SQSQueue.
type SQSQueueStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SQSQueueObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SQSQueue is the Schema for the SQSQueues API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,scaleway}
type SQSQueue struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accessKeySecretRef)",message="spec.forProvider.accessKeySecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.secretKeySecretRef)",message="spec.forProvider.secretKeySecretRef is a required parameter"
	Spec   SQSQueueSpec   `json:"spec"`
	Status SQSQueueStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SQSQueueList contains a list of SQSQueues
type SQSQueueList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SQSQueue `json:"items"`
}

// Repository type metadata.
var (
	SQSQueue_Kind             = "SQSQueue"
	SQSQueue_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SQSQueue_Kind}.String()
	SQSQueue_KindAPIVersion   = SQSQueue_Kind + "." + CRDGroupVersion.String()
	SQSQueue_GroupVersionKind = CRDGroupVersion.WithKind(SQSQueue_Kind)
)

func init() {
	SchemeBuilder.Register(&SQSQueue{}, &SQSQueueList{})
}
